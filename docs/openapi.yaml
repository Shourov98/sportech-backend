openapi: 3.0.3
info:
  title: Admin & Partners API
  version: 1.0.0
  description: API for admin authentication and management, and partners CRUD.
servers:
  - url: /api
paths:
  /auth/health:
    get:
      tags:
        - Auth
      summary: Health check
      responses:
        "200":
          description: OK
  /auth/seed-admin:
    post:
      tags:
        - Auth
      summary: Seed initial admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SeedAdminRequest"
      responses:
        "201":
          description: Admin created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
        "400":
          description: Invalid seed request
        "409":
          description: Admin already exists
  /auth/login:
    post:
      tags:
        - Auth
      summary: Admin login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Invalid credentials
  /auth/logout:
    post:
      tags:
        - Auth
      summary: Admin logout
      responses:
        "200":
          description: Logged out
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericMessage"
  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Request password reset OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
      responses:
        "200":
          description: If email exists, OTP sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericMessage"
  /auth/verify-otp:
    post:
      tags:
        - Auth
      summary: Verify password reset OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyOtpRequest"
      responses:
        "200":
          description: OTP verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  resetToken:
                    type: string
        "400":
          description: Invalid or expired OTP
  /auth/reset-password:
    post:
      tags:
        - Auth
      summary: Reset password with reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        "200":
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericMessage"
        "400":
          description: Invalid reset session
  /auth/change-password:
    post:
      tags:
        - Auth
      summary: Change current admin password
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Password changed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericMessage"
        "401":
          description: Incorrect current password
  /auth/me:
    get:
      tags:
        - Auth
      summary: Get current admin profile
      security:
        - cookieAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  admin:
                    $ref: "#/components/schemas/Admin"
        "401":
          description: Unauthorized
  /partners:
    get:
      tags:
        - Partners
      summary: List partners
      parameters:
        - in: query
          name: published
          schema:
            type: boolean
        - in: query
          name: q
          schema:
            type: string
      responses:
        "200":
          description: A list of partners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Partner"
    post:
      tags:
        - Partners
      summary: Create a new partner
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerRequest"
      responses:
        "201":
          description: Partner created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        "400":
          description: Bad request
  /partners/{id}:
    get:
      tags:
        - Partners
      summary: Get a partner by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Partner found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        "404":
          description: Not found
    put:
      tags:
        - Partners
      summary: Update a partner
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerRequest"
      responses:
        "200":
          description: Partner updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
        "404":
          description: Not found
    delete:
      tags:
        - Partners
      summary: Delete a partner
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Partner deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericMessage"
        "404":
          description: Not found
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
  schemas:
    Admin:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
    GenericMessage:
      type: object
      properties:
        message:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    LoginResponse:
      type: object
      properties:
        admin:
          $ref: "#/components/schemas/Admin"
        token:
          type: string
          description: JWT (also set in httpOnly cookie)
    ForgotPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
    VerifyOtpRequest:
      type: object
      required:
        - email
        - otp
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          description: 4-digit code
    ResetPasswordRequest:
      type: object
      required:
        - email
        - resetToken
        - newPassword
      properties:
        email:
          type: string
          format: email
        resetToken:
          type: string
        newPassword:
          type: string
          format: password
    ChangePasswordRequest:
      type: object
      required:
        - currentPassword
        - newPassword
      properties:
        currentPassword:
          type: string
          format: password
        newPassword:
          type: string
          format: password
    SeedAdminRequest:
      type: object
      required:
        - email
        - password
        - seedSecret
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        seedSecret:
          type: string
    PartnerRequest:
      type: object
      description: Partner fields for create/update operations
      required:
        - name
      properties:
        name:
          type: string
        short_description:
          type: string
        description:
          type: string
        website:
          type: string
        googleplay:
          type: string
        appgallery:
          type: string
        logo:
          type: string
    Partner:
      type: object
      description: Partner document from the database
      properties:
        _id:
          type: string
        name:
          type: string
        shortDesc:
          type: string
        description:
          type: string
        website:
          type: string
        googlePlay:
          type: string
        appGallery:
          type: string
        logo:
          type: string
        slug:
          type: string
        published:
          type: boolean
        order:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
